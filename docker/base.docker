# BUILD-USING:    docker build -t codewars/runner-base .
# TEST-USING:     docker run --rm -i -t --name=test-runner-base --entrypoint=/bin/bash codewars/runner-base -s
# RUN-USING:      docker run --rm --name=runner-base codewars/runner-base --help

# Pull base image.
FROM buildpack-deps:latest

RUN apt-get update -qq

ENV NPM_CONFIG_LOGLEVEL info
ENV NODE_VERSION 16.14.2

RUN curl -sL https://deb.nodesource.com/setup_12.x | bash - 
RUN apt-get install -y nodejs

# Set the env variables to non-interactive
ENV DEBIAN_FRONTEND noninteractive
ENV DEBIAN_PRIORITY critical
ENV DEBCONF_NOWARNINGS yes
ENV TERM linux
RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections

# ADD codewarrior user
RUN useradd codewarrior
RUN rm -rf ~codewarrior && cp -a ~root ~codewarrior && chown -R codewarrior:codewarrior ~codewarrior

# Define default command.
CMD ["bash"]

# Append any relevant run args as per the help

ENV NODE_ENV production
ENTRYPOINT ["timeout", "15", "node"]

# Install Prereqs
RUN apt-get install -y git software-properties-common

# Install Redis
RUN apt-get install -y redis-server

# Install SQLITE
RUN apt-get install -y sqlite3 libsqlite3-dev

# Install MongoDB
RUN apt install -y dirmngr gnupg apt-transport-https ca-certificates software-properties-common
RUN wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | apt-key add -
RUN add-apt-repository 'deb [arch=amd64] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/4.4 multiverse'
RUN apt-get update && apt install -y mongodb-org

# Install MariaDB
RUN apt-get install -y mariadb-server
RUN mysql_install_db

# Install Postgres
RUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -
RUN apt update
RUN apt-get update && apt-get install -y postgresql postgresql-contrib
ENV PATH /usr/lib/postgresql/13/bin:$PATH
RUN mkdir /pgdata
RUN chown codewarrior /pgdata
USER codewarrior
RUN /usr/lib/postgresql/13/bin/initdb -D /pgdata/pg
ENV PGDATA /pgdata/pg
USER root
RUN usermod -G postgres codewarrior

# Install RabbitMQ
# RUN echo 'deb http://www.rabbitmq.com/debian/ testing main' | sudo tee /etc/apt/sources.list.d/rabbitmq.list
# RUN wget -O- https://www.rabbitmq.com/rabbitmq-release-signing-key.asc | sudo apt-key add -
# RUN apt-get update && apt-get install -y rabbitmq-server

# Install CouchDB
# RUN add-apt-repository ppa:couchdb/stable -y
# RUN apt-get update && apt-get install -y couchdb

# Install Cairo graphics
# RUN apt-get install -y libcairo2-dev libjpeg8-dev libpango1.0-dev libgif-dev build-essential g++

RUN mkdir /.npm-global
RUN npm config set prefix '/.npm-global'
RUN su codewarrior -c "echo 'export PATH=\"/.npm-global/bin:$PATH\"' >> ~/.profile"
ENV PATH /.npm-global/bin:$PATH

# Install Node testing frameworks & additional frameworks
RUN npm install -g chai mocha

